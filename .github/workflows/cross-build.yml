name: Deploy for Multiplatform

on:
  push:
    tags:
      - "[0-9]+.[0-9]+.[0-9]+" # Version Number

jobs:
  build-and-upload:
    name: Build and upload project to release
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        include:
          - build: linux
            os: ubuntu-latest
            target: x86_64-unknown-linux-gnu

          - build: macos
            os: macos-latest
            target: x86_64-apple-darwin

          - build: windows-gnu
            os: ubuntu-latest
            target: x86_64-pc-windows-gnu

    steps:
      - name: Clone repository
        uses: actions/checkout@v4

      - name: Install rust dependency
        uses: dtolnay/rust-toolchain@stable
        with:
          targets: ${{ matrix.target }}

      - name: Install cross
        shell: bash
        run: cargo install cross --git https://github.com/cross-rs/cross

      - name: Get the release version from the tag
        shell: bash
        run: echo "VERSION=${GITHUB_REF#refs/tags/}" >> $GITHUB_ENV

      - name: Install libudev for Cross on Linux
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "ubuntu-latest" ]; then
            echo -e "[target.x86_64-unknown-linux-gnu]\npre-build = [\"apt-get update && apt-get install -y libudev-dev libxcb1-dev libhidapi-dev\"]" > Cross.toml
          fi

      - name: Build project
        uses: actions-rs/cargo@v1
        with:
          use-cross: true
          command: build
          args: --verbose --release --target ${{ matrix.target }}

      - name: Create build archive
        shell: bash
        run: |
          binary="duckypad_daemon"
          dir="$binary-${{ env.VERSION }}-${{ matrix.target }}"
          
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            mv "target/${{ matrix.target }}/release/$binary.exe" "$dir"
            7z a "$dir.zip" "$dir"
            echo "ASSET=$dir.zip" >> $GITHUB_ENV
          else
            mv "target/${{ matrix.target }}/release/$binary" "$dir"
            tar -czf "$dir.tar.gz" "$dir"
            echo "ASSET=$dir.tar.gz" >> $GITHUB_ENV
          fi

      - name: Upload binaries to release
        uses: softprops/action-gh-release@v1
        with:
          files: ${{ env.ASSET }}
